#!/usr/bin/env python
# -*- coding: utf-8 -*-
# author：ShidongDu time:2020/4/17
'''
有 N 种物品和一个容量是 V 的背包。

物品一共有三类：

第一类物品只能用1次（01背包）；
第二类物品可以用无限次（完全背包）；
第三类物品最多只能用 si 次（多重背包）；
每种体积是 vi，价值是 wi。

求解将哪些物品装入背包，可使物品体积总和不超过背包容量，且价值总和最大。
输出最大价值。

输入格式
第一行两个整数，N，V，用空格隔开，分别表示物品种数和背包容积。

接下来有 N 行，每行三个整数 vi,wi,si，用空格隔开，分别表示第 i 种物品的体积、价值和数量。

si=−1 表示第 i 种物品只能用1次；
si=0 表示第 i 种物品可以用无限次；
si>0 表示第 i 种物品可以使用 si 次；
输出格式
输出一个整数，表示最大价值。

数据范围
0<N,V≤1000
0<vi,wi≤1000
−1≤si≤1000
输入样例
4 5
1 2 -1
2 4 1
3 4 0
4 5 2
输出样例：
8
'''
# 状态表示：dp[i][j]：只从前i件物品中选，总体积不超过j   属性：max
# 状态计算：① 01背包：dp[i][j] = max(dp[i-1][j], dp[i-1][j-vi]+wi)
#          ② 完全背包：dp[i][j] = max(dp[i-1][j], dp[i][j-vi]+wi)
#          ③ 多重背包：dp[i][j] = max(dp[i-1][j], dp[i-1][j-vi]+wi, dp[i-1][j-2vi]+2wi,...,dp[i-1][j-n*vi]+n*wi)

# 没多大意思，这个题不做了