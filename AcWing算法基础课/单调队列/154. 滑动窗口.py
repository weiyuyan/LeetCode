#!/usr/bin/env python
# -*- coding: utf-8 -*-
# author：ShidongDu time:2020/3/15
'''
给定一个大小为n≤10^6的数组。

有一个大小为k的滑动窗口，它从数组的最左边移动到最右边。

您只能在窗口中看到k个数字。

每次滑动窗口向右移动一个位置。

以下是一个例子：

该数组为[1 3 -1 -3 5 3 6 7]，k为3。

窗口位置	最小值	最大值
[1 3 -1] -3 5 3 6 7	-1	3
1 [3 -1 -3] 5 3 6 7	-3	3
1 3 [-1 -3 5] 3 6 7	-3	5
1 3 -1 [-3 5 3] 6 7	-3	5
1 3 -1 -3 [5 3 6] 7	3	6
1 3 -1 -3 5 [3 6 7]	3	7
您的任务是确定滑动窗口位于每个位置时，窗口中的最大值和最小值。

输入格式
输入包含两行。

第一行包含两个整数n和k，分别代表数组长度和滑动窗口的长度。

第二行有n个整数，代表数组的具体数值。

同行数据之间用空格隔开。

输出格式
输出包含两个。

第一行输出，从左至右，每个位置滑动窗口中的最小值。

第二行输出，从左至右，每个位置滑动窗口中的最大值。

输入样例：
8 3
1 3 -1 -3 5 3 6 7
输出样例：
-1 -3 -3 -3 3 3
3 3 5 5 6 7
'''
# 思考：首先暴力法怎么做？使用一个普通队列进行暴力搜索
# 其次，思考如何去优化
# 删掉所有冗余元素
N, k = list(map(int, input().split()))
sequence = list(map(int, input().split()))
minqueue = []
maxqueue = []

hh = 0; tt = -1 # 队头和队尾
for i in range(N):
    if hh <= tt and minqueue[hh] < i-k+1:
        hh += 1
    while(hh<=tt and sequence[minqueue[tt]]>=sequence[i]):
        tt -= 1
    minqueue.append(i)
    tt += 1

    if(i>=k-1):
        print(sequence[minqueue[hh]], end=' ')
