#!/usr/bin/env python
# -*- coding: utf-8 -*-
# author：ShidongDu time:2020/2/8
'''
给你一个整数数组 arr 和两个整数 k 和 threshold 。

请你返回长度为 k 且平均值大于等于 threshold 的子数组数目。



示例 1：

输入：arr = [2,2,2,2,5,5,5,8], k = 3, threshold = 4
输出：3
解释：子数组 [2,5,5],[5,5,5] 和 [5,5,8] 的平均值分别为 4，5 和 6 。其他长度为 3 的子数组的平均值都小于 4 （threshold 的值)。
示例 2：

输入：arr = [1,1,1,1,1], k = 1, threshold = 0
输出：5
示例 3：

输入：arr = [11,13,17,23,29,31,7,5,2,3], k = 3, threshold = 5
输出：6
解释：前 6 个长度为 3 的子数组平均值都大于 5 。注意平均值不是整数。
示例 4：

输入：arr = [7,7,7,7,7,7,7], k = 7, threshold = 7
输出：1
示例 5：

输入：arr = [4,4,4,4], k = 4, threshold = 1
输出：1


提示：

1 <= arr.length <= 10^5
1 <= arr[i] <= 10^4
1 <= k <= arr.length
0 <= threshold <= 10^4
'''

from typing import List
class Solution:
    def numOfSubarrays(self, arr: List[int], k: int, threshold: int) -> int:
        if len(arr)< k:
            return False
        # arr.sort()
        res = 0
        self.flag = 0
        for i in range(len(arr)-k+1):
            if self.flag == 1:
                if arr[i+k-1] >= arr[i-1]:
                    res += 1
                    continue
                else:
                    self.flag = 0
            if min(arr[i: i+k]) >= threshold:
                self.flag = 1
                res += 1
                continue
            if sum(arr[i: i+k]) >= threshold*k:
                self.flag = 1
                res += 1
            else:
                self.flag = 0
        return res

solution = Solution()
res = solution.numOfSubarrays([7429,3333,9625,3345,6610,6582,1886,9010,8738,5954,8602,5745,7620,2300,4530,
                               5399,8848,1711,9821,3046,8737,3990,2581,5630,1776,1942,416,8718,350,6988,
                               8421,9753,5778,4219,866,2882,5138,4434,7615,326,5219,9008,2468,1182,5958,
                               7360,3358,329,2789,2262,6597,9183,1176,6062,8615,7245,4789,6378,3357,5763,
                               2411,7546,5061,2050,1980,2025,8446,9536,4854,968,8,8038,9192,6316,7156,1845,
                               461,1034,8993,1612,5127,6645,7512,7250,6003,7038,8547,9857,906,663,4727,4642,
                               5916,6293,6148,9915,3059,1337,962,1797,924,4423,5210,5187,8999,5752,3742,769,
                               266,4924,5090,9970,566,4973,752,4607,4635,7715,7577,340,9590,9883,7434,1575,
                               1461,2785,9771,7403,3307,8819,9149,5412,8439,8755,4062,9643,166,2132,7771,4727,
                               1367,5573,5569,1790,449,6608,7283,1350,806,9348,3237,5219,6839,1460,324,5941,4962,
                               8118,7671,1033,8082,7407,4261,6295,5290,9195,867,3237],68,5000)
print(res)